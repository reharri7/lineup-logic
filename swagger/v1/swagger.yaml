---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/auth/login":
    post:
      summary: login user
      tags:
      - Authentication
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      email:
                        type: string
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: password123
              required:
              - email
              - password
  "/api/auth/logout":
    delete:
      summary: logout user
      tags:
      - Authentication
      security:
      - bearerAuth: []
      parameters:
      - name: Authorization
        in: header
        required: true
        description: Bearer token
        example: Bearer your_auth_token_here
        schema:
          type: string
      responses:
        '200':
          description: successful logout
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Successfully logged out
        '401':
          description: unauthorized - invalid or missing token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  "/api/fantasy_teams/{fantasy_team_id}/players":
    parameters:
    - name: fantasy_team_id
      in: path
      required: true
      schema:
        type: integer
    post:
      summary: Adds a player to a fantasy team
      tags:
      - Fantasy Team Players
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '201':
          description: player added to fantasy team
          content:
            application/json:
              schema:
                type: object
                properties:
                  fantasy_team_player:
                    type: object
                    properties:
                      id:
                        type: integer
                      fantasy_team_id:
                        type: integer
                      player_id:
                        type: integer
                      created_at:
                        type: string
                        format: date-time
                      updated_at:
                        type: string
                        format: date-time
                  player:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      number:
                        type: integer
                      team_id:
                        type: integer
                      position_id:
                        type: integer
                      weekly_position_rank:
                        type: integer
                        nullable: true
                      weekly_flex_rank:
                        type: integer
                        nullable: true
                      created_at:
                        type: string
                        format: date-time
                      updated_at:
                        type: string
                        format: date-time
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/unauthorized"
        '403':
          description: forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/forbidden"
        '404':
          description: not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/not_found"
        '422':
          description: invalid request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/errors"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                player:
                  type: object
                  properties:
                    player_id:
                      type: integer
                  required:
                  - player_id
  "/api/fantasy_teams/{fantasy_team_id}/players/{id}":
    parameters:
    - name: fantasy_team_id
      in: path
      required: true
      schema:
        type: integer
    - name: id
      in: path
      required: true
      schema:
        type: integer
    delete:
      summary: Removes a player from a fantasy team
      tags:
      - Fantasy Team Players
      security:
      - bearer_auth: []
      responses:
        '204':
          description: player removed from fantasy team
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/unauthorized"
        '403':
          description: forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/forbidden"
        '404':
          description: not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/not_found"
  "/api/fantasy_teams":
    get:
      summary: Retrieves all fantasy teams for the current user
      tags:
      - Fantasy Teams
      security:
      - bearer_auth: []
      responses:
        '200':
          description: fantasy teams found
          content:
            application/json:
              schema:
                type: object
                properties:
                  fantasy_teams:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        user_id:
                          type: integer
                        created_at:
                          type: string
                          format: date-time
                        updated_at:
                          type: string
                          format: date-time
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/unauthorized"
    post:
      summary: Creates a fantasy team
      tags:
      - Fantasy Teams
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '201':
          description: fantasy team created
          content:
            application/json:
              schema:
                type: object
                properties:
                  fantasy_team:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      user_id:
                        type: integer
                      created_at:
                        type: string
                        format: date-time
                      updated_at:
                        type: string
                        format: date-time
        '422':
          description: invalid request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/errors"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                fantasy_team:
                  type: object
                  properties:
                    name:
                      type: string
                  required:
                  - name
  "/api/fantasy_teams/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: Retrieves a fantasy team
      tags:
      - Fantasy Teams
      security:
      - bearer_auth: []
      responses:
        '200':
          description: fantasy team found
          content:
            application/json:
              schema:
                type: object
                properties:
                  fantasy_team:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      user_id:
                        type: integer
                      created_at:
                        type: string
                        format: date-time
                      updated_at:
                        type: string
                        format: date-time
                  players:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        number:
                          type: integer
                        team_id:
                          type: integer
                        position_id:
                          type: integer
                        weekly_position_rank:
                          type: integer
                          nullable: true
                        weekly_flex_rank:
                          type: integer
                          nullable: true
                        created_at:
                          type: string
                          format: date-time
                        updated_at:
                          type: string
                          format: date-time
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/unauthorized"
        '403':
          description: forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/forbidden"
        '404':
          description: not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/not_found"
    put:
      summary: Updates a fantasy team
      tags:
      - Fantasy Teams
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '200':
          description: fantasy team updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  fantasy_team:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      user_id:
                        type: integer
                      created_at:
                        type: string
                        format: date-time
                      updated_at:
                        type: string
                        format: date-time
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/unauthorized"
        '403':
          description: forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/forbidden"
        '404':
          description: not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/not_found"
        '422':
          description: invalid request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/errors"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                fantasy_team:
                  type: object
                  properties:
                    name:
                      type: string
                  required:
                  - name
    delete:
      summary: Deletes a fantasy team
      tags:
      - Fantasy Teams
      security:
      - bearer_auth: []
      responses:
        '204':
          description: fantasy team deleted
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/unauthorized"
        '403':
          description: forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/forbidden"
        '404':
          description: not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/not_found"
  "/api/password_resets":
    post:
      summary: Request password reset email
      tags:
      - PasswordResets
      parameters: []
      responses:
        '200':
          description: password reset email sent when email exists
        '404':
          description: email not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - email
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
  "/api/password_resets/{token}":
    parameters:
    - name: token
      in: path
      description: Password reset token
      required: true
      schema:
        type: string
    put:
      summary: Reset password with token
      tags:
      - PasswordResets
      parameters: []
      responses:
        '200':
          description: password reset successfully
        '422':
          description: validation errors when passwords do not match
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - password
              - password_confirmation
              properties:
                password:
                  type: string
                  minLength: 8
                  example: NewP@ssw0rd
                password_confirmation:
                  type: string
                  example: NewP@ssw0rd
  "/api/players":
    post:
      summary: create player
      tags:
      - Players
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                type: object
                properties:
                  player:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      number:
                        type: integer
                      weekly_position_rank:
                        type: integer
                        nullable: true
                      weekly_flex_rank:
                        type: integer
                        nullable: true
                      team:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                      position:
                        type: object
                        properties:
                          id:
                            type: integer
                          position_name:
                            type: string
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                number:
                  type: integer
                team_id:
                  type: integer
                position_id:
                  type: integer
                weekly_position_rank:
                  type: integer
                  nullable: true
                weekly_flex_rank:
                  type: integer
                  nullable: true
              required:
              - name
              - number
              - team_id
              - position_id
    get:
      summary: get players
      tags:
      - Players
      security:
      - bearerAuth: []
      parameters:
      - name: page
        in: query
        required: false
        description: Page number
        schema:
          type: integer
      - name: size
        in: query
        required: false
        description: Number of items per page
        schema:
          type: integer
      - name: name_filter
        in: query
        required: false
        description: Name to filter by
        schema:
          type: string
      - name: number_filter
        in: query
        required: false
        description: Number to filter by
        schema:
          type: integer
      - name: team_id
        in: query
        required: false
        description: Team ID to filter by
        schema:
          type: integer
      - name: position_id
        in: query
        required: false
        description: Position ID to filter by
        schema:
          type: integer
      - name: sort_by
        in: query
        required: false
        description: Field to sort by (name, number, team_id, position_id)
        schema:
          type: string
      - name: sort_direction
        in: query
        required: false
        description: Sort direction (asc, desc)
        schema:
          type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  players:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        number:
                          type: integer
                        team:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                        position:
                          type: object
                          properties:
                            id:
                              type: integer
                            position_name:
                              type: string
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                      total_pages:
                        type: integer
                      total_count:
                        type: integer
                      size:
                        type: integer
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
  "/api/players/{id}":
    parameters:
    - name: id
      in: path
      description: player id
      required: true
      schema:
        type: integer
    get:
      summary: get player by id
      tags:
      - Players
      security:
      - bearerAuth: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  player:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      number:
                        type: integer
                      weekly_position_rank:
                        type: integer
                        nullable: true
                      weekly_flex_rank:
                        type: integer
                        nullable: true
                      team:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                      position:
                        type: object
                        properties:
                          id:
                            type: integer
                          position_name:
                            type: string
        '404':
          description: not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    put:
      summary: update player
      tags:
      - Players
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  player:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      number:
                        type: integer
                      weekly_position_rank:
                        type: integer
                        nullable: true
                      weekly_flex_rank:
                        type: integer
                        nullable: true
                      team:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                      position:
                        type: object
                        properties:
                          id:
                            type: integer
                          position_name:
                            type: string
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
        '404':
          description: not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                number:
                  type: integer
                team_id:
                  type: integer
                position_id:
                  type: integer
                weekly_position_rank:
                  type: integer
                  nullable: true
                weekly_flex_rank:
                  type: integer
                  nullable: true
    delete:
      summary: delete player
      tags:
      - Players
      security:
      - bearerAuth: []
      responses:
        '204':
          description: no content
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
        '404':
          description: not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  "/api/positions":
    post:
      summary: create position
      tags:
      - Positions
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                type: object
                properties:
                  position:
                    type: object
                    properties:
                      id:
                        type: integer
                      position_name:
                        type: string
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                position_name:
                  type: string
              required:
              - position_name
    get:
      summary: get positions
      tags:
      - Positions
      security:
      - bearerAuth: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  positions:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        position_name:
                          type: string
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
  "/api/positions/{id}":
    parameters:
    - name: id
      in: path
      description: position id
      required: true
      schema:
        type: integer
    get:
      summary: get position by id
      tags:
      - Positions
      security:
      - bearerAuth: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  position:
                    type: object
                    properties:
                      id:
                        type: integer
                      position_name:
                        type: string
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
        '404':
          description: not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    put:
      summary: update position
      tags:
      - Positions
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  position:
                    type: object
                    properties:
                      id:
                        type: integer
                      position_name:
                        type: string
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
        '404':
          description: not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                position_name:
                  type: string
              required:
              - position_name
    delete:
      summary: delete position
      tags:
      - Positions
      security:
      - bearerAuth: []
      responses:
        '204':
          description: no content
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
        '404':
          description: not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  "/api/teams":
    post:
      summary: create team
      tags:
      - Teams
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                type: object
                properties:
                  team:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
  "/api/teams/{id}":
    parameters:
    - name: id
      in: path
      description: team id
      required: true
      schema:
        type: integer
    put:
      summary: update team
      tags:
      - Teams
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  team:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
        '404':
          description: not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
    delete:
      summary: delete team
      tags:
      - Teams
      security:
      - bearerAuth: []
      responses:
        '204':
          description: no content
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
        '404':
          description: not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    get:
      summary: get team by id
      tags:
      - Teams
      security:
      - bearerAuth: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  team:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
  "/api/teams/":
    get:
      summary: get teams
      tags:
      - Teams
      security:
      - bearerAuth: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  teams:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
  "/api/users":
    get:
      summary: list users
      tags:
      - Users
      security:
      - bearerAuth: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    email:
                      type: string
                    created_at:
                      type: string
                      format: datetime
  "/api/signup":
    post:
      summary: create user
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      username:
                        type: string
                      email:
                        type: string
                      role:
                        type: string
                  token:
                    type: string
                  expires_at:
                    type: string
                    format: datetime
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
                password_confirmation:
                  type: string
              required:
              - username
              - email
              - password
              - password_confirmation
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
components:
  schemas:
    errors:
      type: object
      properties:
        errors:
          type: array
          items:
            type: string
    unauthorized:
      type: object
      properties:
        error:
          type: string
    forbidden:
      type: object
      properties:
        error:
          type: string
    not_found:
      type: object
      properties:
        error:
          type: string
  securitySchemes:
    bearer_auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
