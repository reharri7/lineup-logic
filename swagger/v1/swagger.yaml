---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/auth/login":
    post:
      summary: login user
      tags:
      - Authentication
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      email:
                        type: string
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: password123
              required:
              - email
              - password
  "/api/auth/logout":
    delete:
      summary: logout user
      tags:
      - Authentication
      security:
      - bearerAuth: []
      parameters:
      - name: Authorization
        in: header
        required: true
        description: Bearer token
        example: Bearer your_auth_token_here
        schema:
          type: string
      responses:
        '200':
          description: successful logout
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Successfully logged out
        '401':
          description: unauthorized - invalid or missing token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  "/api/users":
    get:
      summary: list users
      tags:
      - Users
      security:
      - bearerAuth: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    email:
                      type: string
                    created_at:
                      type: string
                      format: datetime
    post:
      summary: create user
      tags:
      - Users
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  email:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
                password_confirmation:
                  type: string
              required:
              - username
              - email
              - password
              - password_confirmation
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
